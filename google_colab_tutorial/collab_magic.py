# -*- coding: utf-8 -*-
"""collab_magic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ad_oOndoeQsxr0W_fOJ-NocZ4Y8isacy

# Colab Magics

**List of All Magic Commands**
"""

# Commented out IPython magic to ensure Python compatibility.
# %lsmagic

"""**List Local Directries**"""

# Commented out IPython magic to ensure Python compatibility.
# %ldir

"""**Get Notebook History**"""

# Commented out IPython magic to ensure Python compatibility.
# %history

"""**CPU Time**"""

# Commented out IPython magic to ensure Python compatibility.
# %time

"""**How long the system has been running?**"""

!uptime

"""**Display available and used memory**"""

!free -h
print("-"*100)

"""**Display the CPU specification**"""

!lscpu
print("-"*70)

"""**List all running VM processes**"""

# Commented out IPython magic to ensure Python compatibility.
# %%sh
# echo "List all running VM processes."
# ps -ef
# echo "Done"

"""**Embed HTML**"""

# Commented out IPython magic to ensure Python compatibility.
# %%html
# <marquee>Towards AI is a great publication platform</marquee>

#@title Personal Detail
#@markdown Informations.

Name = 'Peter' #@param {type: "string"}
Age = 25  #@param {type: "slider", min: 1, max: 100}
zip = 1234  #@param {type: "number"}
Date = '2020-01-26'  #@param {type: "date"}
Gender = "Male"  #@param ['Male', 'Female', 'Other']
#@markdown ---
print("Submitting the form")
print(string_type, slider_value, number, date, pick_me)
print("Submitted")

"""# Plotting"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
from matplotlib import pyplot

random_data = np.random.rand(500).astype(np.float32)
noise_data = np.random.normal(scale=0.5, size=len(x))
y = np.sin(random_data * 7) + noise_data
pyplot.scatter(random_data, y)

"""**Plot HeatMap**"""

import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

length = 10
data = 5 + np.random.randn(length, length)
data += np.arange(length)
data += np.reshape(np.arange(length), (length, 1))
sns.heatmap(data)
plt.show()